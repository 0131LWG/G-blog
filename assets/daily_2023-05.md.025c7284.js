import{_ as a,o as l,c as e,O as s}from"./chunks/framework.fb7bb97b.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"daily/2023-05.md","filePath":"daily/2023-05.md","lastUpdated":1688513418000}'),n={name:"daily/2023-05.md"},t=s(`<h2 id="_5-月-18-日" tabindex="-1">5 月 18 日 <a class="header-anchor" href="#_5-月-18-日" aria-label="Permalink to &quot;5 月 18 日&quot;">​</a></h2><ul><li>部署测试环境</li></ul><h2 id="_5-月-17-日" tabindex="-1">5 月 17 日 <a class="header-anchor" href="#_5-月-17-日" aria-label="Permalink to &quot;5 月 17 日&quot;">​</a></h2><ul><li>目前的 table 组件需要更新的配置还是非常多的，按目前的数据元配置其实是不够的：</li><li><ol><li>前后端所需要配置的参数并不相同，需要进行区分，如宽度等等</li></ol></li><li><ol start="2"><li>当要配置非常多时在数据元就并不合理了，最好是能搭建一个配置平台配置前端所需要的字段</li></ol></li><li>学习了 tsconfig 中 include 和 exclude 详解：<a href="https://blog.csdn.net/weixin_40013817/article/details/127200956" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_40013817/article/details/127200956</a></li><li>修改了 mp-h5 的中 tsconfig，减少不必要的引入</li><li>学习了 JSON.stringify()和 JSON.parse()的用法：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify</a></li><li>第二个参数替换非常好用，合适处理对象的基本数据类型</li></ul><h2 id="_5-月-16-日" tabindex="-1">5 月 16 日 <a class="header-anchor" href="#_5-月-16-日" aria-label="Permalink to &quot;5 月 16 日&quot;">​</a></h2><ul><li>大致的了解了 ivx：</li><li><ol><li>是一种新的编程语言，更多的是通过配置</li></ol></li><li><ol start="2"><li>底层代码是 react 和 go</li></ol></li><li><ol start="3"><li>需要重点学习的应该是原理和设计，系统架构</li></ol></li><li><ol start="4"><li>使用上应该并不复杂，重点学习自定义和事件面板，编译各平台</li></ol></li><li>排查 mp-h5 dev 项目修改 ts 类型不会热更新问题</li><li><ol><li>排查思路大致为使用其他的项目进行配置替换，看是否会热更新</li></ol></li><li><ol start="2"><li>未解决，可能是 ts 类型的问题，需要研究下</li></ol></li></ul><h2 id="_5-月-15-日" tabindex="-1">5 月 15 日 <a class="header-anchor" href="#_5-月-15-日" aria-label="Permalink to &quot;5 月 15 日&quot;">​</a></h2><ul><li>使用了数据元配置，生成表格和查询，还是十分方便的，只需要修改部分指标即可，后期可以加入编辑出现表单的功能和删除的功能，目前只是一种尝试，后面应该需要研究低代码引擎或平台，进行结合使用，需要研究出码</li><li>低代码平台：<a href="https://www.ivx.cn/docview?page=r49119#" target="_blank" rel="noreferrer">https://www.ivx.cn/docview?page=r49119#</a></li><li>低代码引擎：<a href="https://lowcode-engine.cn/site/docs/guide/quickStart/intro" target="_blank" rel="noreferrer">https://lowcode-engine.cn/site/docs/guide/quickStart/intro</a></li></ul><h2 id="_5-月-14-日" tabindex="-1">5 月 14 日 <a class="header-anchor" href="#_5-月-14-日" aria-label="Permalink to &quot;5 月 14 日&quot;">​</a></h2><ul><li>产品构想：数据元配置、数据查询、表单生成、流程控制</li><li>未来发展：<a href="https://youtu.be/H48R3xq7IRI" target="_blank" rel="noreferrer">https://youtu.be/H48R3xq7IRI</a></li></ul><h2 id="_5-月-12-日" tabindex="-1">5 月 12 日 <a class="header-anchor" href="#_5-月-12-日" aria-label="Permalink to &quot;5 月 12 日&quot;">​</a></h2><ul><li><p>获取 vue 组件传入的插槽：useSlots</p></li><li><p>将博客通过 vuepress 部署到 github，并解决部署错误，应该是 github Action 更新了提示是 pnpm 锁文件错误，提交上去后会显示不支持 pnpm.lock 文件，修改 togithub.yml 文件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">name: build to my github</span></span>
<span class="line"><span style="color:#A6ACCD;">on:</span></span>
<span class="line"><span style="color:#A6ACCD;">push:</span></span>
<span class="line"><span style="color:#A6ACCD;">branches: - main</span></span>
<span class="line"><span style="color:#A6ACCD;">jobs:</span></span>
<span class="line"><span style="color:#A6ACCD;">deploy:</span></span>
<span class="line"><span style="color:#A6ACCD;">runs-on: ubuntu-latest # strategy: # matrix: # node-version: [node16]</span></span>
<span class="line"><span style="color:#A6ACCD;">steps: - uses: actions/checkout@v3 - uses: actions/setup-node@v3</span></span>
<span class="line"><span style="color:#A6ACCD;">with:</span></span>
<span class="line"><span style="color:#A6ACCD;">node-version: 16 - name: Install PNPM</span></span>
<span class="line"><span style="color:#A6ACCD;">run: npm i -g pnpm - name: Install &amp; Build</span></span>
<span class="line"><span style="color:#A6ACCD;">run: pnpm install --no-frozen-lockfile &amp;&amp; pnpm run build</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    # - name: CreateTag</span></span>
<span class="line"><span style="color:#A6ACCD;">    #   run git tag -a</span></span>
<span class="line"><span style="color:#A6ACCD;">    - name: Deploy</span></span>
<span class="line"><span style="color:#A6ACCD;">      uses: peaceiris/actions-gh-pages@v3</span></span>
<span class="line"><span style="color:#A6ACCD;">      with:</span></span>
<span class="line"><span style="color:#A6ACCD;">        github_token: \${{ secrets.GITHUB_TOKEN }}</span></span>
<span class="line"><span style="color:#A6ACCD;">        publish_dir: docs/.vitepress/dist</span></span></code></pre></div></li></ul><h2 id="_5-月-11-日" tabindex="-1">5 月 11 日 <a class="header-anchor" href="#_5-月-11-日" aria-label="Permalink to &quot;5 月 11 日&quot;">​</a></h2><ul><li>数据元配置结合 vxe-table 生成表格和搜索条件</li><li>Pinia 报错解决：<a href="https://pinia.vuejs.org/core-concepts/outside-component-usage.html#single-page-applications" target="_blank" rel="noreferrer">https://pinia.vuejs.org/core-concepts/outside-component-usage.html#single-page-applications</a></li></ul><h2 id="_5-月-10-日" tabindex="-1">5 月 10 日 <a class="header-anchor" href="#_5-月-10-日" aria-label="Permalink to &quot;5 月 10 日&quot;">​</a></h2><ul><li>vue3 前端项目一步一步自动化部署到 linux 的 nginx 服务上 <a href="https://juejin.cn/post/7133371713059815432" target="_blank" rel="noreferrer">https://juejin.cn/post/7133371713059815432</a></li><li>vue ts 和 js 混用 <a href="https://blog.csdn.net/qq_52971866/article/details/126753759" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_52971866/article/details/126753759</a></li><li>报错：Loading chunk failed <a href="https://blog.csdn.net/yueye_wu/article/details/126410139" target="_blank" rel="noreferrer">https://blog.csdn.net/yueye_wu/article/details/126410139</a> <a href="http://www.zhano.cn/JavaScript/58890.html" target="_blank" rel="noreferrer">http://www.zhano.cn/JavaScript/58890.html</a> router.replace 并不一定会生效，因为后期未复现</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,17),i=[t];function o(r,p,c,h,u,d){return l(),e("div",null,i)}const b=a(n,[["render",o]]);export{g as __pageData,b as default};
