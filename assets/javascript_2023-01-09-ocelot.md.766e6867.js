import{_ as e,o,c as l,b as n}from"./app.f4aabbaf.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"ocelot 使用说明详解","slug":"ocelot-使用说明详解","link":"#ocelot-使用说明详解","children":[]},{"level":2,"title":"ocelot demo","slug":"ocelot-demo","link":"#ocelot-demo","children":[]},{"level":2,"title":"nginx 配置三个ocelot节点","slug":"nginx-配置三个ocelot节点","link":"#nginx-配置三个ocelot节点","children":[]},{"level":2,"title":"然后在ocelot.json 配置真正的接口服务器","slug":"然后在ocelot-json-配置真正的接口服务器","link":"#然后在ocelot-json-配置真正的接口服务器","children":[]},{"level":2,"title":"ocelot和consul 结合使用","slug":"ocelot和consul-结合使用","link":"#ocelot和consul-结合使用","children":[]},{"level":2,"title":"ocelot官方文档","slug":"ocelot官方文档","link":"#ocelot官方文档","children":[]},{"level":2,"title":"ocelot 动态路由 dynamic routing","slug":"ocelot-动态路由-dynamic-routing","link":"#ocelot-动态路由-dynamic-routing","children":[]},{"level":2,"title":"docker dotnet","slug":"docker-dotnet","link":"#docker-dotnet","children":[]}],"relativePath":"javascript/2023-01-09-ocelot.md","lastUpdated":1683548525000}'),t={name:"javascript/2023-01-09-ocelot.md"},s=n(`<h2 id="ocelot-使用说明详解" tabindex="-1">ocelot 使用说明详解 <a class="header-anchor" href="#ocelot-使用说明详解" aria-hidden="true">#</a></h2><ul><li><a href="https://www.cnblogs.com/jesse2013/p/net-core-apigateway-ocelot-docs.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/jesse2013/p/net-core-apigateway-ocelot-docs.html</a></li></ul><h2 id="ocelot-demo" tabindex="-1">ocelot demo <a class="header-anchor" href="#ocelot-demo" aria-hidden="true">#</a></h2><ul><li><a href="https://www.c-sharpcorner.com/blogs/api-gateway-in-net-60-using-ocelot" target="_blank" rel="noreferrer">https://www.c-sharpcorner.com/blogs/api-gateway-in-net-60-using-ocelot</a></li></ul><p><a href="https://www.cnblogs.com/jesse2013/p/net-core-apigateway-ocelot-docs.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/jesse2013/p/net-core-apigateway-ocelot-docs.html</a></p><h2 id="nginx-配置三个ocelot节点" tabindex="-1">nginx 配置三个ocelot节点 <a class="header-anchor" href="#nginx-配置三个ocelot节点" aria-hidden="true">#</a></h2><ul><li>这三个ocelot节点可以加入到consul中，并添加健康检查的接口，供consul进行服务注册和健康检查</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">server {</span></span>
<span class="line"><span style="color:#A6ACCD;">  listen 8500;</span></span>
<span class="line"><span style="color:#A6ACCD;">  location / {</span></span>
<span class="line"><span style="color:#A6ACCD;">    proxy_pass http://xdpconsul;</span></span>
<span class="line"><span style="color:#A6ACCD;">    proxy_redirect default;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">upstream xdpconsul {</span></span>
<span class="line"><span style="color:#A6ACCD;">  server 116.204.98.9:5003;</span></span>
<span class="line"><span style="color:#A6ACCD;">  server 116.204.98.9:5030;</span></span>
<span class="line"><span style="color:#A6ACCD;">  server 116.204.98.9:5300;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="然后在ocelot-json-配置真正的接口服务器" tabindex="-1">然后在ocelot.json 配置真正的接口服务器 <a class="header-anchor" href="#然后在ocelot-json-配置真正的接口服务器" aria-hidden="true">#</a></h2><ul><li>这里部署节点</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="ocelot和consul-结合使用" tabindex="-1">ocelot和consul 结合使用 <a class="header-anchor" href="#ocelot和consul-结合使用" aria-hidden="true">#</a></h2><ul><li><a href="https://www.cnblogs.com/axzxs2001/p/8487521.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/axzxs2001/p/8487521.html</a></li><li>ocelot中配置consul的配置服务发现 <a href="https://www.cnblogs.com/edisonchou/p/consul_cluster_based_on_docker_introduction.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/edisonchou/p/consul_cluster_based_on_docker_introduction.html</a></li></ul><h2 id="ocelot官方文档" tabindex="-1">ocelot官方文档 <a class="header-anchor" href="#ocelot官方文档" aria-hidden="true">#</a></h2><ul><li><a href="https://ocelot.readthedocs.io/en/latest/introduction/notsupported.html" target="_blank" rel="noreferrer">https://ocelot.readthedocs.io/en/latest/introduction/notsupported.html</a></li></ul><h2 id="ocelot-动态路由-dynamic-routing" tabindex="-1">ocelot 动态路由 dynamic routing <a class="header-anchor" href="#ocelot-动态路由-dynamic-routing" aria-hidden="true">#</a></h2><ul><li><a href="https://www.cnblogs.com/irocker/p/ocelot-servicediscovery.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/irocker/p/ocelot-servicediscovery.html</a></li></ul><h2 id="docker-dotnet" tabindex="-1">docker dotnet <a class="header-anchor" href="#docker-dotnet" aria-hidden="true">#</a></h2><ul><li><a href="https://learn.microsoft.com/zh-cn/dotnet/core/docker/build-container?source=recommendations&amp;tabs=linux" target="_blank" rel="noreferrer">https://learn.microsoft.com/zh-cn/dotnet/core/docker/build-container?source=recommendations&amp;tabs=linux</a></li></ul>`,19),a=[s];function c(r,i,p,d,h,u){return o(),l("div",null,a)}const _=e(t,[["render",c]]);export{g as __pageData,_ as default};
